//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace GarbageCreator {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "15.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class R {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal R() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("GarbageCreator.R", typeof(R).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to #include &quot;{0}.h&quot;
        ///
        ///void {0}::copyFromOther(const {0}&amp; other)
        ///{{
        ///{1}}}
        ///
        ///{0}::{0}(const {0}&amp; other)
        ///{{
        ///	copyFromOther(other);
        ///}}
        ///
        ///{0}::~{0}()
        ///{{
        ///{2}}}
        ///
        ///{0}&amp; {0}::operator=(const {0}&amp; other)
        ///{{
        ///	if (this == &amp;other) return *this;
        ///	copyFromOther(other);
        ///	return *this;
        ///}}
        ///
        ///// Accessors
        ///
        ///{3}.
        /// </summary>
        internal static string basicClassCpp {
            get {
                return ResourceManager.GetString("basicClassCpp", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to #pragma once
        ///#include &lt;cstring&gt;
        ///
        ///class {0}
        ///{{
        ///private:
        ///	// Fields
        ///{1}	
        ///	void copyFromOther(const {0}&amp; other);
        ///public:
        ///	{0}() {{ }} // change this if needed
        ///	{0}(const {0}&amp; other);
        ///	~{0}();
        ///
        ///	{0}&amp; operator=(const {0}&amp; other);
        ///
        ///	// Accessors
        ///
        ///{2}}};.
        /// </summary>
        internal static string basicClassHeader {
            get {
                return ResourceManager.GetString("basicClassHeader", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {0} get{1}() const
        ///{{
        ///	return {2};
        ///}}.
        /// </summary>
        internal static string basicGetter {
            get {
                return ResourceManager.GetString("basicGetter", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to void set{1}({0} value)
        ///{{
        ///	{2} = value;
        ///}}.
        /// </summary>
        internal static string basicSetter {
            get {
                return ResourceManager.GetString("basicSetter", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to const char * get{1}() const
        ///{{
        ///	return {0};
        ///}}.
        /// </summary>
        internal static string stringGetter {
            get {
                return ResourceManager.GetString("stringGetter", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to void set{1}(const char * value)
        ///{{
        ///	if ({0}) delete[] {0};
        ///	
        ///	if (value)
        ///	{{
        ///		int len = strlen(value);
        ///		{0} = new char[len + 1];
        ///		memcpy({0}, value, len + 1);
        ///	}} 
        ///	else {0} = 0;
        ///}}.
        /// </summary>
        internal static string stringSetter {
            get {
                return ResourceManager.GetString("stringSetter", resourceCulture);
            }
        }
    }
}
